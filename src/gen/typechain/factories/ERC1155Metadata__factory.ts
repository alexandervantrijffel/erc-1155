/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC1155Metadata } from "../ERC1155Metadata";

export class ERC1155Metadata__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Metadata> {
    return super.deploy(
      _name,
      _baseURI,
      overrides || {}
    ) as Promise<ERC1155Metadata>;
  }
  getDeployTransaction(
    _name: string,
    _baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _baseURI, overrides || {});
  }
  attach(address: string): ERC1155Metadata {
    return super.attach(address) as ERC1155Metadata;
  }
  connect(signer: Signer): ERC1155Metadata__factory {
    return super.connect(signer) as ERC1155Metadata__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Metadata {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Metadata;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "_uint2str",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a6138038062000a618339810160408190526200003491620001fa565b81516200004990600190602085019062000068565b5080516200005f90600090602084019062000068565b505050620002a2565b828054620000769062000265565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b815167ffffffffffffffff808211156200015457620001546200010e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156200019d576200019d6200010e565b81604052838152602092508683858801011115620001ba57600080fd5b600091505b83821015620001de5785820183015181830184015290820190620001bf565b83821115620001f05760008385830101525b9695505050505050565b600080604083850312156200020e57600080fd5b825167ffffffffffffffff808211156200022757600080fd5b620002358683870162000124565b935060208501519150808211156200024c57600080fd5b506200025b8582860162000124565b9150509250929050565b600181811c908216806200027a57607f821691505b602082108114156200029c57634e487b7160e01b600052602260045260246000fd5b50919050565b6107af80620002b26000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80630e89341c116100505780630e89341c146100a95780635d7ebde4146100bc5780636c0360eb146100cf57600080fd5b806301ffc9a71461006c57806306fdde0314610094575b600080fd5b61007f61007a3660046103d0565b6100d7565b60405190151581526020015b60405180910390f35b61009c610173565b60405161008b9190610449565b61009c6100b736600461049a565b610201565b61009c6100ca36600461049a565b610235565b61009c6103c3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000141561012b57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b60018054610180906104b3565b80601f01602080910402602001604051908101604052809291908181526020018280546101ac906104b3565b80156101f95780601f106101ce576101008083540402835291602001916101f9565b820191906000526020600020905b8154815290600101906020018083116101dc57829003601f168201915b505050505081565b6060600061020e83610235565b60405160200161021f929190610523565b6040516020818303038152906040529050919050565b60408051606480825260a08201909252606091906000908260208201818036833701905050905060005b84156102e1576000610272600a8761068b565b905061027f600a876106ce565b955061028c8160306106e2565b60f81b838361029a816106fa565b9450815181106102ac576102ac610733565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505061025f565b60008167ffffffffffffffff8111156102fc576102fc61062d565b6040519080825280601f01601f191660200182016040528015610326576020820181803683370190505b50905060005b828110156103b9578360016103418386610762565b61034b9190610762565b8151811061035b5761035b610733565b602001015160f81c60f81b82828151811061037857610378610733565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806103b1816106fa565b91505061032c565b5095945050505050565b60008054610180906104b3565b6000602082840312156103e257600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461041257600080fd5b9392505050565b60005b8381101561043457818101518382015260200161041c565b83811115610443576000848401525b50505050565b6020815260008251806020840152610468816040850160208701610419565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156104ac57600080fd5b5035919050565b600181811c908216806104c757607f821691505b60208210811415610501577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008151610519818560208601610419565b9290920192915050565b600080845481600182811c91508083168061053f57607f831692505b6020808410821415610578577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561058c57600181146105bb576105e8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284890196506105e8565b60008b81526020902060005b868110156105e05781548b8201529085019083016105c7565b505084890196505b5050505050506106246105fb8286610507565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261069a5761069a61065c565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826106dd576106dd61065c565b500490565b600082198211156106f5576106f561069f565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561072c5761072c61069f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000828210156107745761077461069f565b50039056fea264697066735822122003ebcdab0e4bb3357cd2f516acef2973de1a497920f3deb0dd9518e7df4d98e164736f6c63430008090033";
